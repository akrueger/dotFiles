local HELP_TEXT=\
"
  USAGE:

  splitRepo

    -t, --target <directory>            Subtree to split
    -r, --remote <remote repository>    Location of remote repository
    -b, --branch <branch name>          Branch of remote target

    -h, --help                          Display this help and exit

  e.g.
    splitRepo -t largeProject/component -r https://github.com/username/remoteRepo.git -b master

  resolves to:

    git subtree push --prefix largeProject/component https://github.com/username/remoteRepo.git master
"

local TARGET=
local REMOTE=
local BRANCH=

# !!! Requires GNU-getopt !!! aliased here as "ggetopt"
if ! OPTIONS=`ggetopt --options t:r:b:h --longoptions target:,remote:,branch:,help -- "$@"`
then
    echo $HELP_TEXT
    return
fi

eval set -- "$OPTIONS"

while true;
do
    case "$1" in
        -h | --help ) echo $HELP_TEXT ; shift ;;
        -t | --target )
            case "$2" in
                "") shift 2 ;;
                *) TARGET=$2 ; shift 2 ;;
            esac ;;
        -r | --remote )
            case "$2" in
                "") shift 2 ;;
                *) REMOTE=$2 ; shift 2 ;;
            esac ;;
        -b | --branch)
            case "$2" in
                "") shift 2 ;;
                *) BRANCH=$2 ; shift 2 ;;
            esac ;;
        --) shift ; break ;;
        -*) echo "$0: error - unrecognized option $1" 1>&2 ; exit 1 ;;
        *) break ;;
    esac
done

if [[ ! $TARGET ]]; then
    echo "error: target required"
    echo $HELP_TEXT
elif [[ $TARGET == "arget" ]]; then
    echo "error: did you mean \`--target\` (with two dashes ?)"
    echo $HELP_TEXT
elif [[ ! $REMOTE ]]; then
    echo "error: remote required"
    echo $HELP_TEXT
elif [[ $REMOTE == "emote" ]]; then
    echo "error: did you mean \`--remote\` (with two dashes ?)"
    echo $HELP_TEXT
elif [[ ! $BRANCH ]]; then
    echo "error: branch required"
    echo $HELP_TEXT
elif [[ $BRANCH == "ranch" ]]; then
    echo "error: did you mean \`--branch\` (with two dashes ?)"
    echo $HELP_TEXT
else
    git subtree push --prefix $TARGET $REMOTE $BRANCH
fi
